#!/bin/bash

# Test 30: Commande phpunit:create avec architecture modulaire
# D√©monstration des capacit√©s avanc√©es de l'unified_test_executor

# Obtenir le r√©pertoire du script et charger l'ex√©cuteur unifi√©
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source "$SCRIPT_DIR/../../lib/func/loader.sh"
# Charger test_session_sync
source "$(dirname "$0")/../../lib/func/test_session_sync_enhanced.sh"

# Initialiser l'environnement de test
init_test_environment
init_test "TEST 30: Commande phpunit:create - Architecture avanc√©e"

# √âtape 1: Cr√©er un test simple
test_session_sync "Cr√©er un test simple" \
'phpunit:create UserService' \
'‚úÖ Test cr√©√© : UserService'

# √âtape 2: Cr√©er un test avec classe sp√©cifi√©e
test_session_sync "Cr√©er un test avec classe" \
'phpunit:create PaymentService --class App\\Service\\PaymentService' \
'üìã Classe test√©e : App\\Service\\PaymentService'

# √âtape 3: Cr√©er un test avec description
test_session_sync "Cr√©er un test avec description" \
'phpunit:create EmailService --description "Tests for email service functionality"' \
'üìÑ Description : Tests for email service functionality'

# √âtape 4: Cr√©er un test avec toutes les options
test_session_sync "Cr√©er un test complet" \
'phpunit:create OrderManager --class App\\Service\\OrderManager --description "Order management tests" --method testCreateOrder' \
'üîß M√©thode initiale : testCreateOrder'

# √âtape 5: V√©rifier que le test actuel est d√©fini
test_session_sync "V√©rifier test actuel" \
'echo isset($GLOBALS["phpunit_current_test"]) ? "Test actuel d√©fini" : "Aucun test actuel"' \
'Test actuel d√©fini'

# √âtape 6: Cr√©er un test avec nom invalide (test d'erreur)
test_session_sync "Nom de test invalide" \
'phpunit:create 123InvalidName' \
'‚ùå'

# √âtape 7: Lister les tests cr√©√©s
test_session_sync "Lister les tests" \
'phpunit:list' \
'UserService'

# √âtape 8: Cr√©er un test avec namespace complexe
test_session_sync "Test avec namespace complexe" \
'phpunit:create ComplexService --class App\\Domain\\User\\Service\\Registration\\EmailVerificationService' \
'App\\Domain\\User\\Service\\Registration\\EmailVerificationService'

# √âtape 9: Overwrite d'un test existant
test_session_sync "√âcraser un test existant" \
'phpunit:create UserService --description "Updated description"' \
'‚úÖ Test cr√©√© : UserService'

# √âtape 10: Cr√©er plusieurs tests et v√©rifier la liste
test_session_sync "Cr√©er plusieurs tests" \
'phpunit:create FirstTest
phpunit:create SecondTest
phpunit:list' \
'FirstTest'

# =============================================================================
# TESTS AVANC√âS - D√©monstration des nouvelles capacit√©s
# =============================================================================

# Test avec retry automatique
test_session_sync "Test avec retry" \
"phpunit:create RetryTest" \
"‚úÖ Test cr√©√©" \
--context phpunit --retry 3 --timeout 10

# Test avec v√©rification exacte
test_session_sync "V√©rification exacte du message" \
"phpunit:create ExactTest" \
"‚úÖ Test cr√©√© : ExactTest" \
--context phpunit --output-check exact

# Test combin√© avec synchronisation
test_session_sync "Test de synchronisation PHPUnit" \
"phpunit:create SyncTest" \
"SyncTest" \
--context phpunit --sync-test

# Test avec input depuis fichier temporaire
echo 'phpunit:create FileTest --description "Test from file"' > /tmp/test_input.txt
test_session_sync "Test depuis fichier" \
    --step "cat /tmp/test_input.txt" \
    --expect "Test cr√©√©" \
    --context shell
rm -f /tmp/test_input.txt

# Test de combinaison de commandes
test_session_sync "Combinaison create + list" \
"phpunit:create CombinedTest" \
"phpunit:list" \
"CombinedTest"

# Test avec pattern d'erreur sp√©cifique
test_session_sync "Pattern d'erreur sp√©cifique" \
"phpunit:create" \
"Arguments manquants"

# Test avec debug activ√©
test_session_sync "Test avec debug" \
"phpunit:create DebugTest" \
"Test cr√©√©" \
--context phpunit --debug

# Test de performance avec timeout court
test_session_sync "Test de performance" \
"phpunit:create PerfTest" \
"Test cr√©√©" \
--context phpunit --timeout 5

# Afficher le r√©sum√©
test_summary

# Sortir avec le code appropri√©
if [[ $FAIL_COUNT -gt 0 ]]; then
    exit 1
else
    exit 0
fi
