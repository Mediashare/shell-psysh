#!/bin/bash

# Test 30: Commande phpunit:create - Cr√©ation de tests PHPUnit
# Tests d'int√©gration des fonctionnalit√©s de cr√©ation de tests

# Get script directory and project root
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROJECT_ROOT="$( cd "$SCRIPT_DIR/../../.." && pwd )"

# Source les biblioth√®ques de test
source "$SCRIPT_DIR/../../lib/test_utils.sh"

# Initialiser le test
init_test "TEST 30: Commande phpunit:create"

# √âtape 1: Cr√©er un test simple
test_monitor_multiline "Cr√©er un test simple" \
'phpunit:create UserService' \
'‚úÖ Test cr√©√© : UserService'

# √âtape 2: Cr√©er un test avec classe sp√©cifi√©e
test_monitor_multiline "Cr√©er un test avec classe" \
'phpunit:create PaymentService --class App\\Service\\PaymentService' \
'üìã Classe test√©e : App\\Service\\PaymentService'

# √âtape 3: Cr√©er un test avec description
test_monitor_multiline "Cr√©er un test avec description" \
'phpunit:create EmailService --description "Tests for email service functionality"' \
'üìÑ Description : Tests for email service functionality'

# √âtape 4: Cr√©er un test avec toutes les options
test_monitor_multiline "Cr√©er un test complet" \
'phpunit:create OrderManager --class App\\Service\\OrderManager --description "Order management tests" --method testCreateOrder' \
'üîß M√©thode initiale : testCreateOrder'

# √âtape 5: V√©rifier que le test actuel est d√©fini
test_monitor_expression "V√©rifier test actuel" \
'echo isset($GLOBALS["phpunit_current_test"]) ? "Test actuel d√©fini" : "Aucun test actuel"' \
'Test actuel d√©fini'

# √âtape 6: Cr√©er un test avec nom invalide (test d'erreur)
test_monitor_error "Nom de test invalide" \
'phpunit:create 123InvalidName' \
'‚ùå'

# √âtape 7: Lister les tests cr√©√©s
test_monitor_multiline "Lister les tests" \
'phpunit:list' \
'UserService'

# √âtape 8: Cr√©er un test avec namespace complexe
test_monitor_multiline "Test avec namespace complexe" \
'phpunit:create ComplexService --class App\\Domain\\User\\Service\\Registration\\EmailVerificationService' \
'App\\Domain\\User\\Service\\Registration\\EmailVerificationService'

# √âtape 9: Overwrite d'un test existant
test_monitor_multiline "√âcraser un test existant" \
'phpunit:create UserService --description "Updated description"' \
'‚úÖ Test cr√©√© : UserService'

# √âtape 10: Cr√©er plusieurs tests et v√©rifier la liste
test_monitor_multiline "Cr√©er plusieurs tests" \
'phpunit:create FirstTest
phpunit:create SecondTest
phpunit:list' \
'FirstTest'

# Afficher le r√©sum√©
test_summary

# Sortir avec le code appropri√©
if [[ $FAIL_COUNT -gt 0 ]]; then
    exit 1
else
    exit 0
fi
