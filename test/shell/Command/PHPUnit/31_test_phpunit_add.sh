#!/bin/bash

# Test 31: Commande phpunit:add - Ajout de m√©thodes de test
# Tests d'int√©gration pour ajouter des m√©thodes aux tests PHPUnit

# Get script directory and project root
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROJECT_ROOT="$( cd "$SCRIPT_DIR/../../.." && pwd )"

# Source les biblioth√®ques de test
source "$SCRIPT_DIR/../../lib/func/loader.sh"
# Charger test_session_sync
source "$(dirname "$0")/../../lib/func/test_session_sync_enhanced.sh"

# Initialiser le test
init_test "TEST 31: Commande phpunit:add"

# √âtape 1: Cr√©er un test pour ajouter des m√©thodes
'phpunit:create TestMethodAdd' \
test_session_sync "Cr√©er un test de base" \
    --step "" \ --context psysh --output-check contains --tag "default_session"
    --context psysh \
    --output-check contains \
    --psysh \
    --tag "default_session"
'‚úÖ Test cr√©√© : TestMethodAdd'

# √âtape 2: Ajouter une m√©thode simple
'phpunit:add testUserCreation' \
test_session_sync "Ajouter une m√©thode simple" \
    --step "" \ --context psysh --output-check contains --tag "default_session"
    --context psysh \
    --output-check contains \
    --psysh \
    --tag "default_session"
'‚úÖ M√©thode ajout√©e : testUserCreation'

# √âtape 3: Ajouter une m√©thode avec description
'phpunit:add testEmailValidation --description "Test email validation functionality"' \
test_session_sync "Ajouter m√©thode avec description" \
    --step "" \ --context psysh --output-check contains --tag "default_session"
    --context psysh \
    --output-check contains \
    --psysh \
    --tag "default_session"
'üìÑ Description : Test email validation functionality'

# √âtape 4: Ajouter m√©thode avec data provider
'phpunit:add testPasswordStrength --data-provider passwordDataProvider' \
test_session_sync "Ajouter m√©thode avec data provider" \
    --step "" \ --context psysh --output-check contains --tag "default_session"
    --context psysh \
    --output-check contains \
    --psysh \
    --tag "default_session"
'üîó Data provider : passwordDataProvider'

# √âtape 5: Ajouter m√©thode avec exception attendue
'phpunit:add testInvalidInput --expects-exception InvalidArgumentException' \
test_session_sync "Ajouter m√©thode avec exception" \
    --step "" \ --context psysh --output-check contains --tag "default_session"
    --context psysh \
    --output-check contains \
    --psysh \
    --tag "default_session"
'‚ö†Ô∏è Exception attendue : InvalidArgumentException'

# √âtape 6: Ajouter m√©thode avec d√©pendance
'phpunit:add testDependentMethod --depends testUserCreation' \
test_session_sync "Ajouter m√©thode avec d√©pendance" \
    --step "" \ --context psysh --output-check contains --tag "default_session"
    --context psysh \
    --output-check contains \
    --psysh \
    --tag "default_session"
'üîó D√©pend de : testUserCreation'

# √âtape 7: Ajouter m√©thode avec toutes les options
'phpunit:add testCompleteScenario --description "Complete test scenario" --data-provider scenarioData --expects-exception RuntimeException --depends testUserCreation' \
test_session_sync "Ajouter m√©thode compl√®te" \
    --step "" \ --context psysh --output-check contains --tag "default_session"
    --context psysh \
    --output-check contains \
    --psysh \
    --tag "default_session"
'üîó Data provider : scenarioData'

# √âtape 8: Tenter d'ajouter sans test actuel (test d'erreur)
'unset($GLOBALS["phpunit_current_test"])
test_session_sync "R√©initialiser contexte et test erreur" \
    --step "" \ --context psysh --output-check contains --tag "default_session"
    --context psysh \
    --output-check contains \
    --psysh \
    --tag "default_session"
phpunit:add testWithoutCurrentTest' \
'‚ùå Aucun test actuel'

# √âtape 9: Recharger test et ajouter m√©thode avec nom invalide
'phpunit:create TestMethodAdd' \
test_session_sync "R√©tablir contexte" \
    --step "" \ --context psysh --output-check contains --tag "default_session"
    --context psysh \
    --output-check contains \
    --psysh \
    --tag "default_session"
'‚úÖ Test cr√©√© : TestMethodAdd'

'phpunit:add 123invalidMethod' \
test_session_sync "Nom de m√©thode invalide" \
    --step "" \ --context psysh --output-check contains --tag "default_session"
    --context psysh \
    --output-check contains \
    --psysh \
    --tag "default_session"
'‚ùå'

# √âtape 10: Ajouter plusieurs m√©thodes et v√©rifier la g√©n√©ration
'phpunit:add testFirstMethod
test_session_sync "Ajouter plusieurs m√©thodes" \
    --step "" \ --context psysh --output-check contains --tag "default_session"
    --context psysh \
    --output-check contains \
    --psysh \
    --tag "default_session"
phpunit:add testSecondMethod
phpunit:add testThirdMethod' \
'‚úÖ M√©thode ajout√©e : testThirdMethod'

# √âtape 11: Remplacer une m√©thode existante
'phpunit:add testFirstMethod --description "Updated description"' \
test_session_sync "Remplacer m√©thode existante" \
    --step "" \ --context psysh --output-check contains --tag "default_session"
    --context psysh \
    --output-check contains \
    --psysh \
    --tag "default_session"
'‚úÖ M√©thode ajout√©e : testFirstMethod'

# √âtape 12: Test avec setup et teardown
'phpunit:add testWithSetupTeardown --setup --teardown' \
test_session_sync "M√©thode avec setup et teardown" \
    --step "" \ --context psysh --output-check contains --tag "default_session"
    --context psysh \
    --output-check contains \
    --psysh \
    --tag "default_session"
'‚úÖ M√©thode ajout√©e : testWithSetupTeardown'

# Afficher le r√©sum√©
test_summary

# Sortir avec le code appropri√©
if [[ $FAIL_COUNT -gt 0 ]]; then
    exit 1
else
    exit 0
fi
